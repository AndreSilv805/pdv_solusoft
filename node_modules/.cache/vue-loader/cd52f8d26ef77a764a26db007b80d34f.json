{"remainingRequest":"C:\\xampp\\htdocs\\pdv_universo\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\xampp\\htdocs\\pdv_universo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\pdv_universo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\pdv_universo\\src\\views\\pedidos\\PedidoEditar.vue?vue&type=template&id=6d8080bb&","dependencies":[{"path":"C:\\xampp\\htdocs\\pdv_universo\\src\\views\\pedidos\\PedidoEditar.vue","mtime":1603138644637},{"path":"C:\\xampp\\htdocs\\pdv_universo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\pdv_universo\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\pdv_universo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\pdv_universo\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}